{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../core/services/auth.service\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction LoginComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, LoginComponent_div_14_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"username\"].errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, LoginComponent_div_19_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"password\"].errors[\"required\"]);\n  }\n}\nfunction LoginComponent_span_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 23);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(formBuilder, route, router, authService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n    this.loading = false;\n    this.submitted = false;\n    this.error = '';\n    this.returnUrl = '/';\n    // Redirect to home if already logged in\n    if (this.authService.isLoggedIn()) {\n      this.router.navigate(['/']);\n    }\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    // Get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  // Convenience getter for easy access to form fields\n  get f() {\n    return this.loginForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // Stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.authService.login(this.f['username'].value, this.f['password'].value).pipe(first()).subscribe({\n      next: () => {\n        this.router.navigate([this.returnUrl]);\n      },\n      error: error => {\n        this.error = error.error.message || 'Invalid username or password';\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 29,\n      vars: 12,\n      consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\", \"mt-5\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"mb-0\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"username\", \"id\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"d-grid\", \"gap-2\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"mt-3\", \"text-center\"], [\"routerLink\", \"/auth/register\"], [1, \"alert\", \"alert-danger\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n          i0.ɵɵtext(6, \"Login\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 1, \"div\", 8);\n          i0.ɵɵelementStart(10, \"div\", 9)(11, \"label\", 10);\n          i0.ɵɵtext(12, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 11);\n          i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 9)(16, \"label\", 13);\n          i0.ɵɵtext(17, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 14);\n          i0.ɵɵtemplate(19, LoginComponent_div_19_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 15)(21, \"button\", 16);\n          i0.ɵɵtemplate(22, LoginComponent_span_22_Template, 1, 0, \"span\", 17);\n          i0.ɵɵtext(23, \" Login \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"div\", 18)(25, \"p\");\n          i0.ɵɵtext(26, \"Don't have an account? \");\n          i0.ɵɵelementStart(27, \"a\", 19);\n          i0.ɵɵtext(28, \"Register here\");\n          i0.ɵɵelementEnd()()()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.submitted && ctx.f[\"username\"].errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"username\"].errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.submitted && ctx.f[\"password\"].errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n      styles: [\".card[_ngcontent-%COMP%] {\\r\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n}\\r\\n\\r\\n.card-header[_ngcontent-%COMP%] {\\r\\n  border-radius: 4px 4px 0 0;\\r\\n}\\r\\n\\r\\n.btn-primary[_ngcontent-%COMP%] {\\r\\n  transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n.btn-primary[_ngcontent-%COMP%]:hover {\\r\\n  transform: translateY(-2px);\\r\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UsMEJBQTBCO0FBQzVCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsMkJBQTJCO0VBQzNCLHdDQUF3QztBQUMxQyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcclxuICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG59XHJcblxyXG4uY2FyZC1oZWFkZXIge1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweCA0cHggMCAwO1xyXG59XHJcblxyXG4uYnRuLXByaW1hcnkge1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XHJcbn1cclxuXHJcbi5idG4tcHJpbWFyeTpob3ZlciB7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpO1xyXG4gIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","first","i0","LoginComponent","constructor","formBuilder","route","router","authService","isLoggedIn","navigate","ngOnInit","loginForm","group","username","required","password","returnUrl","snapshot","queryParams","f","controls","onSubmit","submitted","invalid","loading","login","value","pipe","subscribe","next","error","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\MovieListIO\\movie-wishlist-frontend\\src\\app\\features\\auth\\login\\login.component.ts","D:\\MovieListIO\\movie-wishlist-frontend\\src\\app\\features\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm!: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  error = '';\r\n  returnUrl: string = '/';\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    // Redirect to home if already logged in\r\n    if (this.authService.isLoggedIn()) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    // Get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  // Convenience getter for easy access to form fields\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // Stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authService.login(this.f['username'].value, this.f['password'].value)\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: () => {\r\n          this.router.navigate([this.returnUrl]);\r\n        },\r\n        error: error => {\r\n          this.error = error.error.message || 'Invalid username or password';\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n}","<div class=\"container\">\r\n  <div class=\"row justify-content-center mt-5\">\r\n    <div class=\"col-md-6\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header bg-primary text-white\">\r\n          <h4 class=\"mb-0\">Login</h4>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"alert alert-danger\" *ngIf=\"error\">\r\n              {{ error }}\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label for=\"username\" class=\"form-label\">Username</label>\r\n              <input type=\"text\" formControlName=\"username\" class=\"form-control\" id=\"username\" \r\n                [ngClass]=\"{ 'is-invalid': submitted && f['username'].errors }\" />\r\n              <div *ngIf=\"submitted && f['username'].errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f['username'].errors['required']\">Username is required</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label for=\"password\" class=\"form-label\">Password</label>\r\n              <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"password\" \r\n                [ngClass]=\"{ 'is-invalid': submitted && f['password'].errors }\" />\r\n              <div *ngIf=\"submitted && f['password'].errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f['password'].errors['required']\">Password is required</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"d-grid gap-2\">\r\n              <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n                Login\r\n              </button>\r\n            </div>\r\n            \r\n            <div class=\"mt-3 text-center\">\r\n              <p>Don't have an account? <a routerLink=\"/auth/register\">Register here</a></p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}