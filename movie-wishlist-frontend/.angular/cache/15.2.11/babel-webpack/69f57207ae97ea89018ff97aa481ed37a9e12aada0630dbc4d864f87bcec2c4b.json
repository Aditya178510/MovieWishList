{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../core/services/auth.service\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.success, \" \");\n  }\n}\nfunction RegisterComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.error, \" \");\n  }\n}\nfunction RegisterComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username must be at least 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_15_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username must not exceed 20 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, RegisterComponent_div_15_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(2, RegisterComponent_div_15_div_2_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(3, RegisterComponent_div_15_div_3_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"username\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"username\"].errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"username\"].errors[\"maxlength\"]);\n  }\n}\nfunction RegisterComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_20_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, RegisterComponent_div_20_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(2, RegisterComponent_div_20_div_2_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f[\"email\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f[\"email\"].errors[\"email\"]);\n  }\n}\nfunction RegisterComponent_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_25_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_25_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must not exceed 40 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, RegisterComponent_div_25_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(2, RegisterComponent_div_25_div_2_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(3, RegisterComponent_div_25_div_3_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f[\"password\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f[\"password\"].errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f[\"password\"].errors[\"maxlength\"]);\n  }\n}\nfunction RegisterComponent_div_30_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_30_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Passwords must match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, RegisterComponent_div_30_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(2, RegisterComponent_div_30_div_2_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f[\"confirmPassword\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f[\"confirmPassword\"].errors[\"mustMatch\"]);\n  }\n}\nfunction RegisterComponent_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 29);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(formBuilder, router, authService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.authService = authService;\n      this.loading = false;\n      this.submitted = false;\n      this.error = '';\n      this.success = '';\n      // Redirect to home if already logged in\n      if (this.authService.isLoggedIn()) {\n        this.router.navigate(['/']);\n      }\n    }\n    ngOnInit() {\n      this.registerForm = this.formBuilder.group({\n        username: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\n        confirmPassword: ['', Validators.required]\n      }, {\n        validator: this.mustMatch('password', 'confirmPassword')\n      });\n    }\n    // Custom validator to check that two fields match\n    mustMatch(controlName, matchingControlName) {\n      return formGroup => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n        if (matchingControl.errors && !matchingControl.errors['mustMatch']) {\n          // Return if another validator has already found an error on the matchingControl\n          return;\n        }\n        // Set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n          matchingControl.setErrors({\n            mustMatch: true\n          });\n        } else {\n          matchingControl.setErrors(null);\n        }\n      };\n    }\n    // Convenience getter for easy access to form fields\n    get f() {\n      return this.registerForm.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      // Reset alerts\n      this.error = '';\n      this.success = '';\n      // Stop here if form is invalid\n      if (this.registerForm.invalid) {\n        return;\n      }\n      this.loading = true;\n      this.authService.register(this.f['username'].value, this.f['email'].value, this.f['password'].value).pipe(first()).subscribe({\n        next: () => {\n          this.success = 'Registration successful';\n          this.loading = false;\n          // Redirect to login page after 2 seconds\n          setTimeout(() => {\n            this.router.navigate(['/auth/login']);\n          }, 2000);\n        },\n        error: error => {\n          this.error = error.error.message || 'Registration failed';\n          this.loading = false;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function RegisterComponent_Factory(t) {\n        return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: RegisterComponent,\n        selectors: [[\"app-register\"]],\n        decls: 40,\n        vars: 21,\n        consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\", \"mt-5\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"mb-0\"], [1, \"card-body\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"username\", \"id\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"confirmPassword\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", \"id\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [1, \"d-grid\", \"gap-2\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"mt-3\", \"text-center\"], [\"routerLink\", \"/auth/login\"], [1, \"alert\", \"alert-success\"], [1, \"alert\", \"alert-danger\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n        template: function RegisterComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n            i0.ɵɵtext(6, \"Register\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"div\", 6);\n            i0.ɵɵtemplate(8, RegisterComponent_div_8_Template, 2, 1, \"div\", 7);\n            i0.ɵɵtemplate(9, RegisterComponent_div_9_Template, 2, 1, \"div\", 8);\n            i0.ɵɵelementStart(10, \"form\", 9);\n            i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_10_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(11, \"div\", 10)(12, \"label\", 11);\n            i0.ɵɵtext(13, \"Username\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(14, \"input\", 12);\n            i0.ɵɵtemplate(15, RegisterComponent_div_15_Template, 4, 3, \"div\", 13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"div\", 10)(17, \"label\", 14);\n            i0.ɵɵtext(18, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(19, \"input\", 15);\n            i0.ɵɵtemplate(20, RegisterComponent_div_20_Template, 3, 2, \"div\", 13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(21, \"div\", 10)(22, \"label\", 16);\n            i0.ɵɵtext(23, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(24, \"input\", 17);\n            i0.ɵɵtemplate(25, RegisterComponent_div_25_Template, 4, 3, \"div\", 13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(26, \"div\", 10)(27, \"label\", 18);\n            i0.ɵɵtext(28, \"Confirm Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(29, \"input\", 19);\n            i0.ɵɵtemplate(30, RegisterComponent_div_30_Template, 3, 2, \"div\", 13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(31, \"div\", 20)(32, \"button\", 21);\n            i0.ɵɵtemplate(33, RegisterComponent_span_33_Template, 1, 0, \"span\", 22);\n            i0.ɵɵtext(34, \" Register \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(35, \"div\", 23)(36, \"p\");\n            i0.ɵɵtext(37, \"Already have an account? \");\n            i0.ɵɵelementStart(38, \"a\", 24);\n            i0.ɵɵtext(39, \"Login here\");\n            i0.ɵɵelementEnd()()()()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"ngIf\", ctx.success);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.submitted && ctx.f[\"username\"].errors));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"username\"].errors);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.submitted && ctx.f[\"email\"].errors));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"email\"].errors);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.submitted && ctx.f[\"password\"].errors));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.submitted && ctx.f[\"confirmPassword\"].errors));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"confirmPassword\"].errors);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.loading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          }\n        },\n        dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n        styles: [\".card[_ngcontent-%COMP%]{box-shadow:0 4px 8px #0000001a}.card-header[_ngcontent-%COMP%]{border-radius:4px 4px 0 0}.btn-primary[_ngcontent-%COMP%]{transition:all .3s ease}.btn-primary[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 4px 8px #0003}\"]\n      });\n    }\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}