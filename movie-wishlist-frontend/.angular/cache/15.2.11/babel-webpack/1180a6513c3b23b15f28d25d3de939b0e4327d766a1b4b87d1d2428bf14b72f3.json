{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../core/services/auth.service\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.success, \" \");\n  }\n}\nfunction RegisterComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.error, \" \");\n  }\n}\nfunction RegisterComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username must be at least 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_15_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username must not exceed 20 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, RegisterComponent_div_15_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(2, RegisterComponent_div_15_div_2_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(3, RegisterComponent_div_15_div_3_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"username\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"username\"].errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"username\"].errors[\"maxlength\"]);\n  }\n}\nfunction RegisterComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_20_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, RegisterComponent_div_20_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(2, RegisterComponent_div_20_div_2_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f[\"email\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f[\"email\"].errors[\"email\"]);\n  }\n}\nfunction RegisterComponent_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_25_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_25_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must not exceed 40 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, RegisterComponent_div_25_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(2, RegisterComponent_div_25_div_2_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(3, RegisterComponent_div_25_div_3_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f[\"password\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f[\"password\"].errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f[\"password\"].errors[\"maxlength\"]);\n  }\n}\nfunction RegisterComponent_div_30_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_30_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Passwords must match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, RegisterComponent_div_30_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(2, RegisterComponent_div_30_div_2_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f[\"confirmPassword\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f[\"confirmPassword\"].errors[\"mustMatch\"]);\n  }\n}\nfunction RegisterComponent_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 29);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class RegisterComponent {\n  constructor(formBuilder, router, authService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.authService = authService;\n    this.loading = false;\n    this.submitted = false;\n    this.error = '';\n    this.success = '';\n    // Redirect to home if already logged in\n    if (this.authService.isLoggedIn()) {\n      this.router.navigate(['/']);\n    }\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\n      confirmPassword: ['', Validators.required]\n    }, {\n      validator: this.mustMatch('password', 'confirmPassword')\n    });\n  }\n  // Custom validator to check that two fields match\n  mustMatch(controlName, matchingControlName) {\n    return formGroup => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n      if (matchingControl.errors && !matchingControl.errors['mustMatch']) {\n        // Return if another validator has already found an error on the matchingControl\n        return;\n      }\n      // Set error on matchingControl if validation fails\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({\n          mustMatch: true\n        });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    };\n  }\n  // Convenience getter for easy access to form fields\n  get f() {\n    return this.registerForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // Reset alerts\n    this.error = '';\n    this.success = '';\n    // Stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.authService.register(this.f['username'].value, this.f['email'].value, this.f['password'].value).pipe(first()).subscribe({\n      next: () => {\n        this.success = 'Registration successful';\n        this.loading = false;\n        // Redirect to login page after 2 seconds\n        setTimeout(() => {\n          this.router.navigate(['/auth/login']);\n        }, 2000);\n      },\n      error: error => {\n        this.error = error.error.message || 'Registration failed';\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function RegisterComponent_Factory(t) {\n      return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 40,\n      vars: 21,\n      consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\", \"mt-5\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"mb-0\"], [1, \"card-body\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"username\", \"id\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"confirmPassword\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", \"id\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [1, \"d-grid\", \"gap-2\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"mt-3\", \"text-center\"], [\"routerLink\", \"/auth/login\"], [1, \"alert\", \"alert-success\"], [1, \"alert\", \"alert-danger\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n          i0.ɵɵtext(6, \"Register\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 6);\n          i0.ɵɵtemplate(8, RegisterComponent_div_8_Template, 2, 1, \"div\", 7);\n          i0.ɵɵtemplate(9, RegisterComponent_div_9_Template, 2, 1, \"div\", 8);\n          i0.ɵɵelementStart(10, \"form\", 9);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_10_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(11, \"div\", 10)(12, \"label\", 11);\n          i0.ɵɵtext(13, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 12);\n          i0.ɵɵtemplate(15, RegisterComponent_div_15_Template, 4, 3, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 10)(17, \"label\", 14);\n          i0.ɵɵtext(18, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 15);\n          i0.ɵɵtemplate(20, RegisterComponent_div_20_Template, 3, 2, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"div\", 10)(22, \"label\", 16);\n          i0.ɵɵtext(23, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"input\", 17);\n          i0.ɵɵtemplate(25, RegisterComponent_div_25_Template, 4, 3, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"div\", 10)(27, \"label\", 18);\n          i0.ɵɵtext(28, \"Confirm Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(29, \"input\", 19);\n          i0.ɵɵtemplate(30, RegisterComponent_div_30_Template, 3, 2, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"div\", 20)(32, \"button\", 21);\n          i0.ɵɵtemplate(33, RegisterComponent_span_33_Template, 1, 0, \"span\", 22);\n          i0.ɵɵtext(34, \" Register \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"div\", 23)(36, \"p\");\n          i0.ɵɵtext(37, \"Already have an account? \");\n          i0.ɵɵelementStart(38, \"a\", 24);\n          i0.ɵɵtext(39, \"Login here\");\n          i0.ɵɵelementEnd()()()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.success);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.submitted && ctx.f[\"username\"].errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"username\"].errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.submitted && ctx.f[\"email\"].errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"email\"].errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.submitted && ctx.f[\"password\"].errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.submitted && ctx.f[\"confirmPassword\"].errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"confirmPassword\"].errors);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n      styles: [\".card[_ngcontent-%COMP%] {\\r\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n}\\r\\n\\r\\n.card-header[_ngcontent-%COMP%] {\\r\\n  border-radius: 4px 4px 0 0;\\r\\n}\\r\\n\\r\\n.btn-primary[_ngcontent-%COMP%] {\\r\\n  transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n.btn-primary[_ngcontent-%COMP%]:hover {\\r\\n  transform: translateY(-2px);\\r\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvYXV0aC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UsMEJBQTBCO0FBQzVCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsMkJBQTJCO0VBQzNCLHdDQUF3QztBQUMxQyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcclxuICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG59XHJcblxyXG4uY2FyZC1oZWFkZXIge1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweCA0cHggMCAwO1xyXG59XHJcblxyXG4uYnRuLXByaW1hcnkge1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XHJcbn1cclxuXHJcbi5idG4tcHJpbWFyeTpob3ZlciB7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpO1xyXG4gIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","first","i0","RegisterComponent","constructor","formBuilder","router","authService","isLoggedIn","navigate","ngOnInit","registerForm","group","username","required","minLength","maxLength","email","password","confirmPassword","validator","mustMatch","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","value","setErrors","f","onSubmit","submitted","error","success","invalid","loading","register","pipe","subscribe","next","setTimeout","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\MovieListIO\\movie-wishlist-frontend\\src\\app\\features\\auth\\register\\register.component.ts","D:\\MovieListIO\\movie-wishlist-frontend\\src\\app\\features\\auth\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm!: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  error = '';\r\n  success = '';\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    // Redirect to home if already logged in\r\n    if (this.authService.isLoggedIn()) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      username: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, {\r\n      validator: this.mustMatch('password', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  // Custom validator to check that two fields match\r\n  mustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n      if (matchingControl.errors && !matchingControl.errors['mustMatch']) {\r\n        // Return if another validator has already found an error on the matchingControl\r\n        return;\r\n      }\r\n\r\n      // Set error on matchingControl if validation fails\r\n      if (control.value !== matchingControl.value) {\r\n        matchingControl.setErrors({ mustMatch: true });\r\n      } else {\r\n        matchingControl.setErrors(null);\r\n      }\r\n    };\r\n  }\r\n\r\n  // Convenience getter for easy access to form fields\r\n  get f() { return this.registerForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // Reset alerts\r\n    this.error = '';\r\n    this.success = '';\r\n\r\n    // Stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authService.register(\r\n      this.f['username'].value,\r\n      this.f['email'].value,\r\n      this.f['password'].value\r\n    )\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: () => {\r\n          this.success = 'Registration successful';\r\n          this.loading = false;\r\n          // Redirect to login page after 2 seconds\r\n          setTimeout(() => {\r\n            this.router.navigate(['/auth/login']);\r\n          }, 2000);\r\n        },\r\n        error: error => {\r\n          this.error = error.error.message || 'Registration failed';\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n}","<div class=\"container\">\r\n  <div class=\"row justify-content-center mt-5\">\r\n    <div class=\"col-md-6\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header bg-primary text-white\">\r\n          <h4 class=\"mb-0\">Register</h4>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"alert alert-success\" *ngIf=\"success\">\r\n            {{ success }}\r\n          </div>\r\n          <div class=\"alert alert-danger\" *ngIf=\"error\">\r\n            {{ error }}\r\n          </div>\r\n          \r\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"username\" class=\"form-label\">Username</label>\r\n              <input type=\"text\" formControlName=\"username\" class=\"form-control\" id=\"username\" \r\n                [ngClass]=\"{ 'is-invalid': submitted && f['username'].errors }\" />\r\n              <div *ngIf=\"submitted && f['username'].errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f['username'].errors['required']\">Username is required</div>\r\n                <div *ngIf=\"f['username'].errors['minlength']\">Username must be at least 3 characters</div>\r\n                <div *ngIf=\"f['username'].errors['maxlength']\">Username must not exceed 20 characters</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label for=\"email\" class=\"form-label\">Email</label>\r\n              <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" \r\n                [ngClass]=\"{ 'is-invalid': submitted && f['email'].errors }\" />\r\n              <div *ngIf=\"submitted && f['email'].errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f['email'].errors['required']\">Email is required</div>\r\n                <div *ngIf=\"f['email'].errors['email']\">Email must be a valid email address</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label for=\"password\" class=\"form-label\">Password</label>\r\n              <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"password\" \r\n                [ngClass]=\"{ 'is-invalid': submitted && f['password'].errors }\" />\r\n              <div *ngIf=\"submitted && f['password'].errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f['password'].errors['required']\">Password is required</div>\r\n                <div *ngIf=\"f['password'].errors['minlength']\">Password must be at least 6 characters</div>\r\n                <div *ngIf=\"f['password'].errors['maxlength']\">Password must not exceed 40 characters</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label for=\"confirmPassword\" class=\"form-label\">Confirm Password</label>\r\n              <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" id=\"confirmPassword\" \r\n                [ngClass]=\"{ 'is-invalid': submitted && f['confirmPassword'].errors }\" />\r\n              <div *ngIf=\"submitted && f['confirmPassword'].errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f['confirmPassword'].errors['required']\">Confirm Password is required</div>\r\n                <div *ngIf=\"f['confirmPassword'].errors['mustMatch']\">Passwords must match</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"d-grid gap-2\">\r\n              <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n                Register\r\n              </button>\r\n            </div>\r\n            \r\n            <div class=\"mt-3 text-center\">\r\n              <p>Already have an account? <a routerLink=\"/auth/login\">Login here</a></p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}